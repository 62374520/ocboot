- name: Import Install mariadb task
  include_tasks: "{{ ansible_distribution | lower | replace(' ', '_')}}-{{ ansible_architecture }}.yml"

# - name: Install mariadb python libs
#   package:
#     name:
#     - python-mysqldb
#     - python-pymysql
#     state: present
#   when:
#   - is_debian_based is defined

- name: Copy my.cnf
  copy:
    src: my.cnf
    dest: /etc/my.cnf

- name: mariadb config hack
  shell: |
    if [ ! -d /etc/my.cnf.d ] && [ -d /etc/mysql ]; then
      ln -sf /etc/mysql /etc/my.cnf.d
    fi
    if [ -f /etc/mysql/mariadb.conf.d/50-server.cnf ] && grep -qP 'bind-address *= *127.0.0.1' /etc/mysql/mariadb.conf.d/50-server.cnf; then
      cp -vf /etc/mysql/mariadb.conf.d/50-server.cnf /etc/mysql/mariadb.conf.d/50-server.cnf.$(date +"%Y%m%d-%H%M%S").bak
      sed -i 's#bind-address *= *127.0.0.1#bind-address = 0.0.0.0#' /etc/mysql/mariadb.conf.d/50-server.cnf
    fi
    systemctl restart mariadb
  args:
    executable: /bin/bash

- name: Enable mariadb
  service:
    name: mariadb
    enabled: yes
    state: started


- name: mariadb hack for uos
  shell: |
    if [ ! -d /etc/my.cnf.d ] && [ -d /etc/mysql ]; then
      ln -sf /etc/mysql /etc/my.cnf.d
    fi
    if [ -f /etc/mysql/mariadb.conf.d/50-server.cnf ] && grep -qP 'bind-address *= *127.0.0.1' /etc/mysql/mariadb.conf.d/50-server.cnf; then
      cp -vf /etc/mysql/mariadb.conf.d/50-server.cnf /etc/mysql/mariadb.conf.d/50-server.cnf.$(date +"%Y%m%d-%H%M%S").bak
      sed -i 's#bind-address *= *127.0.0.1#bind-address = 0.0.0.0#' /etc/mysql/mariadb.conf.d/50-server.cnf
    fi
    systemctl restart mariadb
  args:
    executable: /bin/bash

- name: Change root password
  mysql_user:
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  changed_when: false
  failed_when: false

- name: Allow remote root access with grant priv with raw mysql
  shell: |
    default_ip=$(ip route get 1 | head -n 1 | awk '{print $7}')
    given_ip="{{ db_host }}"
    if [[ "$given_ip" == "$default_ip" ]] || [[ "$given_ip" == 127.* ]]; then
      mysql -u "{{ db_user }}" -e 'grant all privileges on *.* to `{{ db_user }}`@`%` identified by "{{ db_password }}" with grant option; FLUSH PRIVILEGES;' || \
      mysql -u "{{ db_user }}" -p"{{ db_password }}" -e 'grant all privileges on *.* to `{{ db_user }}`@`%` identified by "{{ db_password }}" with grant option; FLUSH PRIVILEGES;' || \
      mysql -u "{{ db_user }}" -p"{{ db_password }}" -h "{{ db_host }}" -e 'grant all privileges on *.* to `{{ db_user }}`@`%` identified by "{{ db_password }}" with grant option; FLUSH PRIVILEGES;'
    fi
  args:
    executable: /bin/bash
