- name: Get default gateway
  shell: "ip route get 1 | head -n 1 | awk '{print $3}'"
  register: default_gateway_ret

- name: Set default gateway var
  set_fact:
    default_gateway: "{{ default_gateway_ret.stdout }}"

- name: "Get default gateway {{ default_gateway }} local ip address"
  shell: "ip route get 1 | head -n 1 | awk '{print $7}'"
  register: default_ip_ret

- name: Set default ip var
  set_fact:
    default_ip: "{{ default_ip_ret.stdout }}"

- name: "Get default ip address {{ default_ip }} masklen"
  shell: |
    masklen="$(ip route list | grep -w {{ default_ip }} | head -n 1 | awk '{print $1}' | cut -d '/' -f 2)"
    if [[ "$masklen" =~ ^[0-9]+$ ]]; then
      echo "$masklen"
    else
      echo "30"
    fi
  register: default_masklen_ret
  args:
    executable: /bin/bash

- name: Set default ip masklen
  set_fact:
    default_masklen: "{{ default_masklen_ret.stdout }}"

- name: Wait onecloud CRD created
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  shell: 'kubectl get crd | grep onecloudcluster'
  retries: 30
  delay: 10
  register: result
  until: result.rc == 0


- name: Check onecloud cluster exists
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  shell: "kubectl get onecloudcluster -n onecloud | grep default | wc -l"
  register: OC_CLUSTER_COUNT


- name: Init construct create cluster args
  set_fact:
    init_cluster_args: ""

- name: construct create cluster args
  set_fact:
    init_cluster_args: "--use-ee"
  when:
  - use_ee is defined
  - use_ee|default(false)|bool == true

- name: construct create cluster args
  set_fact:
    init_cluster_args: "{{ init_cluster_args }} --disable-resource-management"
  when:
  - is_kylin_based is defined
  - is_kylin_based |default(alse)|bool == true

- name: Create essential services, wait for a few minutes...
  shell: "/opt/yunion/bin/ocadm cluster create {{ init_cluster_args }} --wait"
  retries: 6
  delay: 10
  register: result
  until: result.rc == 0
  ignore_errors: yes
  when:
  - OC_CLUSTER_COUNT.stdout|int == 0

- name: Enable minio S3 object storage for services
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  shell: |
    kubectl -n onecloud patch onecloudcluster default --type='json' -p '[{"op": "replace", "path": "/spec/minio/enable", "value": true}]'
    kubectl -n onecloud patch onecloudcluster default --type='json' -p '[{"op": "replace", "path": "/spec/glance/switchToS3", "value": true}]'
  when:
  - enable_minio is defined
  - enable_minio|default(false)|bool == true

- name: "Use product version {{ product_version }}"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  shell: |
    kubectl -n onecloud patch onecloudcluster default --type='json' -p '[{"op": "replace", "path": "/spec/productVersion", "value": "{{ product_version }}"}]'
  when:
  - product_version is defined

- name: "Write cluster rcadmin in master's ~/.onecloud_rcadmin"
  shell: |
    /opt/yunion/bin/ocadm cluster rcadmin > ~/.onecloud_rcadmin
  retries: 6
  delay: 10
  ignore_errors: yes

- name: "Source ~/.onecloud_rcadmin in ~/.bashrc"
  lineinfile:
    dest: ~/.bashrc
    line: "source ~/.onecloud_rcadmin"
    state: present
    create: yes
    regexp: '^source ~/.onecloud_rcadmin'
  ignore_errors: yes
  when:
  - shell is undefined or shell == 'bash'

- name: "Check onecloud user {{ onecloud_user }} exists"
  shell: |
    eval $(/opt/yunion/bin/ocadm cluster rcadmin)
    /opt/yunion/bin/climc user-list | grep -w {{ onecloud_user }} | wc -l
  register: OC_USER_COUNT
  ignore_errors: yes
  retries: 3
  delay: 10

- name: "Create onecloud web login user {{ onecloud_user }}"
  shell: |
   eval $(/opt/yunion/bin/ocadm cluster rcadmin)
   /opt/yunion/bin/climc user-create --password {{ onecloud_user_password }} --enabled {{ onecloud_user }}
  ignore_errors: yes
  retries: 3
  delay: 10
  args:
    executable: /bin/bash
  when:
  - OC_USER_COUNT.stdout|int == 0
  - use_ee is not defined or not use_ee

- name: "Update onecloud user {{ onecloud_user }} password to {{ onecloud_user_password }}"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc user-update --password {{ onecloud_user_password }} --enabled --allow-web-console {{ onecloud_user }}
  retries: 3
  delay: 10
  args:
    executable: /bin/bash
  when:
  - use_ee is not defined or not use_ee

- name: "Make onecloud user {{ onecloud_user }} as system admin"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc project-add-user system {{ onecloud_user }} admin
  args:
    executable: /bin/bash
  when:
  - use_ee is not defined or not use_ee

- name: Check if admin network adm0 exists
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc network-show adm0 > /dev/null 2>&1
  register: network_admin_exist
  ignore_errors: yes
  changed_when: false
  failed_when: false
  args:
    executable: /bin/bash

- name: "Check if network contains {{ default_ip }}"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc network-list --ip {{ default_ip }} | grep -v Total | wc -l
  register: network_count_ret
  ignore_errors: yes
  args:
    executable: /bin/bash


- name: set admin network count
  set_fact:
    admin_network_count: "{{ network_count_ret.stdout }}"

- name: "Register adm0 network for {{ default_ip }}/{{ default_masklen }}, gateway {{ default_gateway }}"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc network-create --gateway {{ default_gateway }} --server-type baremetal bcast0 adm0 {{ default_ip }} {{ default_ip }} {{ default_masklen }}
    /opt/yunion/bin/climc network-private adm0
  when: network_admin_exist.rc != 0 and admin_network_count|int == 0
  args:
    executable: /bin/bash

- name: "post install scripts"
  shell: |
    if [ ! -d /opt/yunion/upgrade/post-install ]; then
      exit
    fi
    find /opt/yunion/upgrade/post-install -name '*.sh' -type f| while read line
    do
      echo "processing $line ... "
      sh -c "$line" 2>&1 | tee -a /tmp/post-install.log
      echo "[DONE ]processing $line OK"
    done
  args:
    executable: /bin/bash
